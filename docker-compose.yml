services:
  webbaharihook:
    build:
      context: .
      dockerfile: Dockerfile
    image: webbaharihook:latest
    container_name: webbaharihook-app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_URL: https://${DOMAIN:-webbaharihook2.baharihari.com}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: production
    restart: unless-stopped
    networks:
      - webbaharihook-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: webbaharihook-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - webbaharihook
    restart: unless-stopped
    networks:
      - webbaharihook-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: webbaharihook-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - webbaharihook-network

networks:
  webbaharihook-network:
    driver: bridge